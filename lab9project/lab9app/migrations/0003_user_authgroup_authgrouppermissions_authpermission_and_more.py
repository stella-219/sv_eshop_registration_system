# Generated by Django 5.1.3 on 2024-11-15 02:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("lab9app", "0002_customers_odetails_orders_parts_zipcodes"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "user_id",
                    models.IntegerField(
                        db_column="User_ID", primary_key=True, serialize=False
                    ),
                ),
                ("user_name", models.CharField(db_column="User_Name", max_length=100)),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, db_column="Phone_Number", max_length=15, null=True
                    ),
                ),
                (
                    "email_address",
                    models.CharField(
                        blank=True, db_column="Email_Address", max_length=100, null=True
                    ),
                ),
                ("password", models.CharField(db_column="Password", max_length=50)),
            ],
            options={
                "db_table": "USER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Delivery",
            fields=[
                (
                    "delivery_id",
                    models.IntegerField(
                        db_column="Delivery_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "delivery_method",
                    models.CharField(
                        blank=True,
                        db_column="Delivery_Method",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "delivery_address",
                    models.TextField(
                        blank=True, db_column="Delivery_Address", null=True
                    ),
                ),
            ],
            options={
                "db_table": "DELIVERY",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Products",
            fields=[
                (
                    "product_id",
                    models.IntegerField(
                        db_column="Product_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "proname",
                    models.CharField(
                        blank=True, db_column="ProName", max_length=200, null=True
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True, db_column="Brand", max_length=200, null=True
                    ),
                ),
                (
                    "cost",
                    models.DecimalField(
                        blank=True,
                        db_column="Cost",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        db_column="Price",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "prodescription",
                    models.TextField(blank=True, db_column="ProDescription", null=True),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, db_column="Category", max_length=50, null=True
                    ),
                ),
                (
                    "image",
                    models.CharField(
                        blank=True, db_column="Image", max_length=500, null=True
                    ),
                ),
                (
                    "quantity_available",
                    models.IntegerField(
                        blank=True, db_column="Quantity_Available", null=True
                    ),
                ),
                (
                    "quantity_sold",
                    models.IntegerField(
                        blank=True, db_column="Quantity_Sold", null=True
                    ),
                ),
                (
                    "popular_items",
                    models.IntegerField(
                        blank=True, db_column="Popular_Items", null=True
                    ),
                ),
            ],
            options={
                "db_table": "PRODUCTS",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "order",
                    models.OneToOneField(
                        db_column="Order_ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="lab9app.orders",
                    ),
                ),
                ("quantity", models.IntegerField(db_column="Quantity")),
            ],
            options={
                "db_table": "ORDER_ITEM",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "payment_id",
                    models.IntegerField(
                        db_column="Payment_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "payment_date",
                    models.DateField(blank=True, db_column="Payment_Date", null=True),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True,
                        db_column="Total_Amount",
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "PAYMENT",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Rating",
            fields=[
                (
                    "rate_id",
                    models.AutoField(
                        db_column="Rate_ID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "comments",
                    models.TextField(blank=True, db_column="Comments", null=True),
                ),
                (
                    "rate_score",
                    models.IntegerField(blank=True, db_column="Rate_Score", null=True),
                ),
            ],
            options={
                "db_table": "RATING",
                "managed": False,
            },
        ),
        migrations.DeleteModel(
            name="Customers",
        ),
        migrations.DeleteModel(
            name="Department",
        ),
        migrations.DeleteModel(
            name="Employee",
        ),
        migrations.DeleteModel(
            name="Odetails",
        ),
        migrations.DeleteModel(
            name="Parts",
        ),
        migrations.DeleteModel(
            name="Zipcodes",
        ),
        migrations.AlterModelTable(
            name="orders",
            table="ORDERS",
        ),
        migrations.CreateModel(
            name="Admin",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        db_column="User_ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="lab9app.user",
                    ),
                ),
            ],
            options={
                "db_table": "ADMIN",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        db_column="User_ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="lab9app.user",
                    ),
                ),
                (
                    "bank_account",
                    models.CharField(
                        blank=True, db_column="Bank_Account", max_length=50, null=True
                    ),
                ),
                (
                    "home_address",
                    models.CharField(
                        blank=True, db_column="Home_Address", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "db_table": "CUSTOMER",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FoodBeverage",
            fields=[
                (
                    "product",
                    models.OneToOneField(
                        db_column="Product_ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="lab9app.products",
                    ),
                ),
                (
                    "sell_by",
                    models.DateField(blank=True, db_column="Sell_By", null=True),
                ),
            ],
            options={
                "db_table": "FOOD_BEVERAGE",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="GeneralMerchandise",
            fields=[
                (
                    "product",
                    models.OneToOneField(
                        db_column="Product_ID",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="lab9app.products",
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        blank=True, db_column="Color", max_length=20, null=True
                    ),
                ),
            ],
            options={
                "db_table": "GENERAL_MERCHANDISE",
                "managed": False,
            },
        ),
    ]
